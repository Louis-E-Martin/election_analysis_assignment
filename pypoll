# The data we need to retrieve
# 1 The total number of votes cast
# 2 A complete list of the candidates who recived votes
# 3 the precentage of votes each canidadzte won
# 4 the total numberof votes each candidate won
# 5 the winner of the electuon based on popular vote

# importing librays
from calendar import c
import csv
import os




# assingning varible to our load path
file_to_load = os.path.join("Resources", "election_results.csv")

# assinging varible to our save path
file_to_save = os.path.join("analysis", "election_analysis.txt")

# starting the total vote counter
total_votes = 0

#Canidate options and canidate votes
candidate_options = []

# Declaring the empty dictionary to store our canidates and their votes
candidate_votes = {}

# winning candidate and winning count tracker

winning_candidate = ""

winning_count = 0

winning_percentage = 0

# opening our data
with open (file_to_load) as election_data:

   file_reader = csv.reader(election_data)

   headers = next(file_reader)

   for row in file_reader:
        # Add to the total vote count
        total_votes += 1
        
        # Add the candidate name for each row
        candidate_name = row[2]
        
        #if the candidate does not mathc an exisitng one add it to the list
        if candidate_name not in candidate_options:

            #if the candidate does not mathc an exisitng one add it to the list
            candidate_options.append(candidate_name)

            # begin trackting a that candidate's vote count
            candidate_votes[candidate_name] = 0

        # Counting the vote for each candidate
        candidate_votes[candidate_name] += 1


with open(file_to_save, "w") as txt_file:

    election_results = (
        f"\nElection Results\n"
        f"-------------------------\n"
        f"Total Votes: {total_votes:,}\n"
        f"-------------------------")

    print(election_results, end="")

    txt_file.write(election_results)

# iterate through our candidate list        
    for candidate_name in candidate_votes:

        # retrive  the vote count for a candidate
        votes = candidate_votes[candidate_name]

        # calculate the precentage of votes
        vote_percentage = float(votes) / float(total_votes) * 100

        

        
        candidate_results = (f"\n{candidate_name}: {vote_percentage: .1f}% ({votes:,})\n")

        print(candidate_results)

        txt_file.write(candidate_results)



        if(votes > winning_count) and (vote_percentage >  winning_percentage):

            # If our statement is true the set votes to the number of votes the winner got
            winning_count = votes

            # set the voter percentage to the winners vote percentage
            winning_percentage = vote_percentage
            
            # set the winning candiates name 
            winning_candidate = candidate_name

    winning_candidate_summary = (

        f"----------------------------\n"
        f"Winner: {winning_candidate}\n"
        f"Winning Vote Count: {winning_count:,}\n"
        f"Winning Percentage: {winning_percentage: .1f}%\n"
    )

    txt_file.write(winning_candidate_summary)


#print(winning_candidate_summary)
   


